name: Push on server
on:
  push:
    branches: [ "add_cicd" ]
  workflow_dispatch:
    inputs:
      reason:
        description: 'why'
        required: false
        default: 'just for fun'
env:
  FRONTEND_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/hacaton-frontend:${{ github.sha }}
  BACKEND_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/hacaton-api:${{ github.sha }}
  ML_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/hacaton-ml:${{ github.sha }}

jobs:
  build-backend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Login to Dockerhub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Setup Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Backend
      uses: docker/build-push-action@v3
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: true
        tags: ${{ env.BACKEND_IMAGE }}
  build-frontend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Login to Dockerhub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Setup Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Frontend
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./frontend/Dockerfile
        push: true
        tags: ${{ env.FRONTEND_IMAGE }}
  build-ml:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Login to Dockerhub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Setup Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build ML
      uses: docker/build-push-action@v3
      with:
        context: ./ml
        file: ./ml/Dockerfile
        push: true
        tags: ${{ env.ML_IMAGE }}
  update-yc:
    runs-on: ubuntu-latest
    needs: [ build-backend, build-frontend, build-ml ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Deploy COI VM
        id: deploy-coi
        uses: yc-actions/yc-coi-deploy@v1.0.1
        env:
          FRONTEND_IMAGE: ${{ env.FRONTEND_IMAGE }}
          BACKEND_IMAGE: ${{ env.BACKEND_IMAGE }}
          ML_IMAGE: ${{ env.ML_IMAGE }}
          YC_VM_SSH: ${{ secrets.YC_VM_SSH }}
          YC_VM_USERNAME: ${{ secrets.YC_VM_USERNAME }}
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          folder-id: ${{ secrets.YC_FOLDER_ID }}
          VM-name: ${{ secrets.YC_VM_NAME }}
          vm-service-account-id: ${{ secrets.YC_SERVICE_ACCOUNT_ID }}
          vm-cores: 2
          vm-platform-id: 'standard-v2'
          vm-memory: 512Mb
          vm-disk-size: 30Gb
          vm-core-fraction: 5
          vm-subnet-id: ${{ secrets.YC_SUBNET_ID }}
          docker-compose-path: './.github/workflows/yandex-cloud/docker-compose.yc.yaml'
          user-data-path: '/.github/workflows/yandex-cloud/user-data.yaml'