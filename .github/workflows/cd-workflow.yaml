name: Push on server
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      reason:
        description: 'why'
        required: false
        default: 'just for fun'
env:
  FRONTEND_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/hacaton-frontend:${{ github.sha }}
  BACKEND_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/hacaton-api:${{ github.sha }}
  ML_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/hacaton-ml:${{ github.sha }}

jobs:
  build-backend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Login to Dockerhub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Setup Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Backend
      uses: docker/build-push-action@v3
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: true
        tags: ${{ env.BACKEND_IMAGE }}
  build-frontend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Login to Dockerhub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Setup Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Frontend
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./frontend/Dockerfile
        push: true
        tags: ${{ env.FRONTEND_IMAGE }}
  build-ml:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Login to Dockerhub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Setup Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build ML
      uses: docker/build-push-action@v3
      with:
        context: ./ml
        file: ./ml/Dockerfile
        push: true
        tags: ${{ env.ML_IMAGE }}